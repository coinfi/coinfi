<html>
  <head>
    <meta name="viewport" content="width=device-width">
    <%= render 'layouts/tracking_scripts_preconnect' %>
    <link rel="preconnect" href="https://unpkg.com" crossorigin>
    <link rel="preconnect" href="https://d3js.org" crossorigin>
    <link rel="stylesheet" href="/css/gauge.css">
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-6jHF7Z3XI3fF4XZixAuSu0gGKrXwoX/w3uFPxC56OtjChio7wtTGJWRW53Nhx6Ev" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i&amp;subset=cyrillic,cyrillic-ext,greek,greek-ext,latin-ext,vietnamese" rel="stylesheet">
    <%= stylesheet_link_tag 'indicators' %>
  </head>
  <body>
    <div class="main-container">

      <h2 class="main-title">
        <%= t(:technical_analysis_and_price_movements) %>
        <a class="coinfi-link" href="<%= root_url %>">
          Powered by <img src="<%= image_path('logo.svg') %>" class="coinfi-link__img" />
        </a>
      </h2>

      <div class="flex-container">
        <div class="half-width-container">
          <div class="paper">
            <h3><%= t(@coin.slug, scope:'coins') %> <%= t(:stats) %></h3>
            <div class="stats">
              <div class="stats__row">
                <div><%= t(:crypto_rank) %></div>
                <div>
                  <%= link_to @crypo_rank, coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
              <div class="stats__row">
                <div><%= t(:day_move_label, days: 7) %></div>
                <div class="<%= get_buy_sell_class(@coin.change7d) %>">
                  <%= link_to format_percentage(@coin.change7d), coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
              <div class="stats__row">
                <div><%= t(:day_move_label, days: 30) %></div>
                <div class="<%= get_buy_sell_class(@coin.change30d) %>">
                  <%= link_to format_percentage(@coin.change30d), coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
              <div class="stats__row">
                <div><%= t :market_cap_label %></div>
                <div class="price">
                  <%= link_to format_price(@coin.market_cap, precision: 2), coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
              <div class="stats__row">
                <div><%= t :volume_24h_label %></div>
                <div class="price">
                  <%= link_to format_price(@coin.volume24h, precision: 2), coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
              <div class="stats__row">
                <div><%= t :circulating_supply_label %></div>
                <div>
                  <%= link_to @coin.available_supply > 0 ? format_supply(@coin.available_supply) : "N/A", coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
              <div class="stats__row">
                <div><%= t :fixed_supply_label %></div>
                <div>
                  <%= link_to @coin.fixed_supply > 0 ? format_supply(@coin.fixed_supply) : "N/A", coin_url(@coin.slug), class: 'plain-link' %>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="half-width-container">
          <div class="paper">
            <h3>
              <%= t(:technical_analysis_summary) %>
              <a class="header-info-icon" data-tippy="<%= t :indicator_summary_copy %>">
                <i class="far fa-info-circle"></i>
              </a>
            </h3>
            <div class="gauge-wrapper">
              <div class="gauge"></div>
            </div>
            <div class="indicators-summary">
              <div>
                <div class="sell"><%= @summary[:sell] %></div>
                <div><%= t(:sell).upcase %></div>
              </div>
              <div>
                <div><%= @summary[:neutral] %></div>
                <div><%= t(:neutral).upcase %></div>
              </div>
              <div>
                <div class="buy"><%= @summary[:buy] %></div>
                <div><%= t(:buy).upcase %></div>
              </div>
            </div>
            <div class="indicators-updated"><%= t(:updated_on_date, date: l(@last_updated, format: :readable_date)) %></div>
          </div>
        </div>
      </div>

      <div class="flex-container">
        <div class="paper">
          <h3>
            <%= t(:technical_indicators) %>
            <a data-tippy="<% @indicator_rows.each do |indicator| %>
              <b><%= t(indicator[:symbol], scope: 'indicators.title') %>:</b> <%= t(indicator[:symbol], scope: 'indicators.rule') %><br/>
            <% end %>" data-tippy-maxWidth="700"><i class="far fa-info-circle"></i></a>
          </h3>
          <table class="indicators-desktop">
            <thead>
              <tr>
                <th></th>
                <th><%= t :sample_value_label %></th>
                <th><%= t :min_label %></th>
                <th><%= t :max_label %></th>
                <th class="indicators__signal"><%= t :signal_label %></th>
              </tr>
            </thead>
            <tbody>
            <% @indicator_rows.each do |indicator| %>
              <tr>
                <td><%= t(indicator[:symbol], scope: 'indicators.title') %></td>
                <td class="number"><%= indicator[:value] %></td>
                <td class="number"><%= indicator[:min].presence || t(:na) %></td>
                <td class="number"><%= indicator[:max].presence || t(:na) %></td>
                <td class="indicators__signal <%= indicator[:signal].downcase %>">
                  <span><%= indicator[:signal].present? ? t(indicator[:signal].downcase).upcase : "" %></span>
                </td>
              </tr>
            <% end %>
            </tbody>
          </table>
          <div class="indicators-mobile">
          <% @indicator_rows.each do |indicator| %>
            <div class="indicators-mobile__row">
              <div class="indicators-mobile__col-titles">
                <div class="indicators__title">
                  <%= t(indicator[:symbol], scope: 'indicators.title') %>
                </div>
                <% if indicator[:min].present? || indicator[:max].present? %>
                  <div class="indicators__rule">
                    (<%= t(:min_label) %>: <%= indicator[:min].presence || t(:na) %>,
                    <%= t(:max_label) %>: <%= indicator[:max].presence || t(:na) %>)
                  </div>
                <% end %>
              </div>
              <div class="indicators-mobile__col-values">
                <div class="indicators__signal <%= indicator[:signal].downcase %>">
                  <span><%= indicator[:signal].present? ? t(indicator[:signal].downcase).upcase : "" %> (<%= indicator[:value] %>)</span>
                </div>
              </div>
            </div>
          <% end %>
          </div>
          <div class="copy-container">
            <%= t :technical_indicator_copy %>
          </div>
        </div>
      </div>

      <% unless @news_items.blank? %>
      <h2><%= t(:latest_research) %></h2>
      <div class="flex-container">
        <div class="paper">
          <h3><%= t(:market_news_research) %></h3>
          <div class="news">
            <% @news_items.each do |news_item| %>
            <div class="news-item">
              <h4 class="news-item__title">
                <%= link_to news_item.title, news_item_url(id: news_item.id, slug: news_item.slug) %>
              </h4>
              <div class="news-item__summary">
                <%= news_item.short_summary %>
              </div>
              <div class="news-item__footer">
                <div class="news-item__details">
                  <%= t(:time_ago, time_words: time_ago_in_words(news_item.feed_item_published_at)) %>
                </div>
                <div class="news-item__link">
                  <%= link_to t(:read_more), news_item_url(id: news_item.id, slug: news_item.slug) %>
                </div>
              </div>
            </div>
            <% end %>
          </div>
        </div>
      </div>
      <% end %>

      <h2><%= t(:fundamentals) %></h2>
      <div class="flex-container flex-wrap">
        <div class="paper with-sidebar">
          <h3>
            <%= t :development_activity %>
          </h3>
          <% if @commit_activity.present? %>
          <svg id="commit-activity" class="graph-container tab-container" preserveAspectRatio="xMidYMid meet"></svg>
          <% end %>
        </div>
        <div class="sidebar sidebar-right">
          <h3>
            <%= t :developer_community %>
            <a class="header-info-icon" data-tippy="<%= t(:developer_community_copy) %>">
              <i class="far fa-info-circle"></i>
            </a>
          </h3>
          <% if @github_snapshot.present? %>
          <div class="github-stats">
            <div class="github-stats__row">
              <div class="github-stats__label">
                <i class="far fa-users"></i>
                <%= t(:contributors).capitalize %>
              </div>
              <div class="github-stats__right">
                <div class="github-stats__value"><%= @github_snapshot[:contributors] %></div>
                <% if @github_snapshot[:contributors_rank].present? and @github_snapshot[:contributors_total].present? %>
                <div class="github-stats__rank">
                  <%= t(:ranked_out_of, rank: @github_snapshot[:contributors_rank], total: @github_snapshot[:contributors_total])%>
                </div>
                <% end %>
              </div>
            </div>
            <div class="github-stats__row">
              <div class="github-stats__label">
                <i class="far fa-code-branch"></i>
                <%= t(:forks).capitalize %>
              </div>
              <div class="github-stats__right">
                <div class="github-stats__value"><%= @github_snapshot[:forks] %></div>
                <% if @github_snapshot[:forks_rank].present? and @github_snapshot[:forks_total].present? %>
                <div class="github-stats__rank">
                  <%= t(:ranked_out_of, rank: @github_snapshot[:forks_rank], total: @github_snapshot[:forks_total])%>
                </div>
                <% end %>
              </div>
            </div>
            <div class="github-stats__row">
              <div class="github-stats__label">
                <i class="far fa-eye"></i>
                <%= t(:watchers).capitalize %>
              </div>
              <div class="github-stats__right">
                <div class="github-stats__value"><%= @github_snapshot[:watchers] %></div>
                <% if @github_snapshot[:watchers_rank].present? and @github_snapshot[:watchers_total].present? %>
                <div class="github-stats__rank">
                  <%= t(:ranked_out_of, rank: @github_snapshot[:watchers_rank], total: @github_snapshot[:watchers_total])%>
                </div>
                <% end %>
              </div>
            </div>
            <div class="github-stats__row">
              <div class="github-stats__label">
                <i class="far fa-star"></i>
                <%= t(:stargazers).capitalize %>
              </div>
              <div class="github-stats__right">
                <div class="github-stats__value"><%= @github_snapshot[:stargazers] %></div>
                <% if @github_snapshot[:stargazers_rank].present? and @github_snapshot[:stargazers_total].present? %>
                <div class="github-stats__rank">
                  <%= t(:ranked_out_of, rank: @github_snapshot[:stargazers_rank], total: @github_snapshot[:stargazers_total])%>
                </div>
                <% end %>
              </div>
            </div>
          </div>
          <% end %>
          <div class="github-repo-link">
            <i class="fab fa-github"></i> <%= t :github_repo %>:
            <%= link_to @coin.github_repo, github_url(@coin.github_repo), rel: "nofollow noopener noreferrer", target: "_blank" %>
          </div>
        </div>
        <div class="copy-container">
          <%= t(:development_activity_copy, name: @coin.name, symbol: @coin.symbol) %>
        </div>
      </div>

      <div class="footer">
        <a class="coinfi-link" href="<%= root_url %>">
          Powered by <img src="<%= image_path('logo.svg') %>" class="coinfi-link__img" />
        </a>
      </div>
    </div>

    <script src="https://unpkg.com/popper.js@1"></script>
    <script src="https://unpkg.com/tippy.js@4"></script>
    <script src="/js/gauge.js"></script>
    <script src="https://d3js.org/d3.v5.min.js"></script>
    <script src="/js/d3scription.js"></script>
    <script type="text/javascript">
      /* GAUGE */
      var options = {
        angle: [180, 360],
        values: {
          10: '<%= t(:strong_sell).titleize %>',
          30: '',
          50: '<%= t(:neutral).titleize %>',
          70: '',
          90: '<%= t(:strong_buy).titleize %>'
        },
        colors: {
          0: '#ce1d1d',
          20: '#de6160',
          40: '#d4d5d8',
          60: '#9ac854',
          80: '#6aac0e'
        },
        marks: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
        value: <%= @summary_value %>
      };
      var gauge = new Gauge(document.querySelector(".gauge"), options);
    </script>
    <script type="text/javascript">
      /* CHARTS */
      var defaultChartWidth = 620;
      var widthToHeightRatio = 4/3;

      /* Localization */
      var i18nDays = <%= t(:day_names, scope: :date ).to_json.html_safe %>;
      var i18nShortDays = <%= t(:abbr_day_names, scope: :date ).to_json.html_safe %>;
      var i18nMonths = <%= t(:month_names, scope: :date ).to_json.html_safe %>;
      var i18nShortMonths = <%= t(:abbr_month_names, scope: :date ).to_json.html_safe %>;
      var i18nDelimiter = <%= t(:delimiter, scope: 'number.format' ).to_json.html_safe %>;
      var i18nSeparator = <%= t(:separator, scope: 'number.format' ).to_json.html_safe %>;
      d3.timeFormatDefaultLocale({
        "dateTime": "%a %b %e %X %Y",
        "date": "%Y-%m-%d",
        "time": "%H:%M:%S",
        "periods": ["AM", "PM"],
        "days": i18nDays,
        "shortDays": i18nShortDays,
        "months": i18nMonths.slice(1),
        "shortMonths": i18nShortMonths.slice(1),
      });
      d3.formatLocale({
        "decimal": i18nDelimiter,
        "thousands": i18nSeparator,
        "grouping": [3],
        "currency": ["$", ""],
      })

      var i18nDateLabel = <%= t(:date_label).to_json.html_safe %>;
      var i18nCommitsLabel = <%= t(:commits).to_json.html_safe %>;
      var i18nChangesLabel = <%= t(:changes).to_json.html_safe %>;
      var i18nCommitActivityTooltip = <%= t(:commit_activity_tooltip).to_json.html_safe %>;
      var i18nAdditionsTooltip = <%= t(:additions_tooltip).to_json.html_safe %>;
      var i18nDeletionsTooltip = <%= t(:deletions_tooltip).to_json.html_safe %>;

      <% if @commit_activity.present? %>
      /* Commit Activity */

      // Functions
      function getXCA(d) { return d.timestamp; }
      function getYCA(d) { return d.commits; }

      // Data
      var idCA = 'commit-activity';
      var commitActivity = <%= @commit_activity.to_json.html_safe %>;
      var dataCA = commitActivity.map(function(d) {
        var timestamp = new Date(getXCA(d) * 1000);
        var commits = getYCA(d);
        return {
          timestamp: timestamp,
          commits: commits
        };
      });

      // Dimensions and scale
      var marginCA = {top: 20, right: 20, bottom: 50, left: 40};
      var outerWidthCA = document.getElementById(idCA).getBoundingClientRect()['width'] || defaultChartWidth;
      var widthCA = outerWidthCA - marginCA.left - marginCA.right;
      var outerHeightCA = outerWidthCA / widthToHeightRatio;
      var heightCA = outerHeightCA - marginCA.top - marginCA.bottom;
      var barWidthCA = Math.floor(widthCA / dataCA.length) - 1;

      var datesCA = dataCA.map(getXCA);
      var minDateCA = d3.min(datesCA)
      var maxDateCA = d3.max(datesCA)
      var xCA = d3.scaleTime()
                  .domain([
                    minDateCA,
                    new Date(maxDateCA.valueOf() + 7*24*60*60*1000) // add one week to max
                  ])
                  .range([0, widthCA]);
      var yCA = d3.scaleLinear()
                  .domain([0, d3.max(dataCA.map(getYCA))])
                  .range([heightCA, 0]);

      // Chart
      var chartCA = d3.select('#' + idCA)
                      .attr('viewBox', '0 0 ' + outerWidthCA + ' ' + outerHeightCA)
                    .append('g')
                      .attr('transform', 'translate(' + marginCA.left + ', ' + marginCA.top + ')');

      // Tooltip
      var tipFactoryCA = d3scription(function(d) {
        var date = d3.timeFormat('%b %d, %Y')(getXCA(d));
        var value = getYCA(d);
        var tooltip = i18nCommitActivityTooltip
                        .replace('{date}', date)
                        .replace('{value}', value);
        return tooltip;
      }, {
        class: 'chart-tooltip',
      });
      var tipCA = tipFactoryCA().element(chartCA);

      // Bars
      var barCA = chartCA.selectAll('g.bar').data(dataCA)
                          .enter().append('g')
                          .attr('class', 'bar')
                          .attr('transform', function(d, i) {
                            return "translate(" + xCA(getXCA(d)) + ", 0)";
                          });
      var rectCA = barCA.append('rect')
            .attr('y', heightCA)
            .attr('height', 0)
            .attr('width', barWidthCA)
            .on('mouseover', function() {
              d3.select(this).attr('opacity', 0.7);
              tipCA.show.apply(this, arguments);
            })
            .on('mouseout', function() {
              d3.select(this).attr('opacity', 1);
              tipCA.hide.apply(this, arguments);
            });

      // Starting animation
      rectCA.transition()
            .duration(800)
            .attr("y", function(d) { return yCA(getYCA(d)); })
            .attr("height", function(d) { return heightCA - yCA(getYCA(d)); })
            .delay(0)

      // X Axis
      var tickValuesCA = d3.timeMonth.range(minDateCA, maxDateCA, 3);
      tickValuesCA.push(maxDateCA);
      var xAxisCA = d3.axisBottom(xCA)
                      .tickValues(tickValuesCA)
                      .tickFormat(d3.timeFormat('%b %Y'));
      chartCA.append('g')
                .attr('class', 'x axis')
                .attr('transform', 'translate(0, ' + heightCA + ')')
                .call(xAxisCA)
              .append('text')
                .attr('class', 'title')
                .attr('y', 40)
                .attr('x', widthCA/2)
                .style('font-size', '12px')
                .text(i18nDateLabel);

      // Y Axis
      var yAxisCA = d3.axisLeft(yCA)
                      .ticks(4)
                      .tickPadding(10);
      chartCA.append('g')
                .attr('class', 'y axis')
                .call(yAxisCA)
              .append('text')
                .attr('class', 'title')
                .attr('transform', 'rotate(-90)')
                .attr('y', -30)
                .attr('x', -heightCA/2)
                .style('font-size', '12px')
                .text(i18nCommitsLabel);
      <% end %>
    </script>
    <%= render 'layouts/tracking_scripts' %>
  </body>
</html>